nfit <- lm(count ~ spray - 1, InsectSprays)
mean(sB)
summary(nfit)$coef
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray2, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
summary(fit2)$coef
mean(sC)
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
q
0
0
q
exit
exit()
quit()
library(swirl)
swirl(
)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
head(rstudent(fit))
dy <- predict(fitno, out2)-predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)
str(install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college))
str(college)
data(mtcars)
str(mtcars)
mtcars$cylF<-as.factor(mtcars$cyl)
str(mtcars)
mean(mtcars(which(cyl==8))$mpg)
mean(mtcars(which(mtcars$cyl==8))$mpg)
mean(mtcars[which(mtcars$cyl==8)]$mpg)
mean(mtcars[which(mtcars$cylF=="8")]$mpg)
mean(mtcars[cylF=="8"]$mpg)
mean(mtcars$cylF=="8"]$mpg)
mean(mtcars[mtcars$cylF=="8"]$mpg)
mtcars$cylF
mtcars$cylF==8
mean(mtcars[mtcars$cylF==8]$mpg)
mean(mtcars[mtcars$cylF==8,]$mpg)
mean(mtcars[mtcars$cylF==4,]$mpg)
mean(mtcars[mtcars$cylF==8,]$mpg)-mean(mtcars[mtcars$cylF==4,]$mpg)
fit1c8<-lm(mpg~cylF+wt,data=mtcars)
fit1c8<-lm(mpg~cylF+wt,data=mtcars[mtcars$cylF==8,])
fit1<-lm(mpg~cylF+wt,data=mtcars)
plot(fit)
plot(fit1)
fit1$coefficients
plot(fit1$mpg, wt)
plot(fit1$mpg, fit1$wt)
plot(fit1)
plot(fit1)
plot(mpg~wt, data=mtcars)
abline(fit1)
coef(fit1)
coef(fit1)$cylF6
coef(fit1)[1]
coef(fit1)[2]
coef(fit1)[4]
summary(fit1)
g<-ggplot(mtcars, aes(x=mpg, y=wt, colour=cylF))
library(ggplot2)
g<-ggplot(mtcars, aes(x=mpg, y=wt, colour=cylF))
g<-g+geom_point()
g
g+abline(intercept=coef(fit1)[1], slope=coef(fit1)[2])+abline(intercept=coef(fit1)[1]+coef(fit1)[3], slope=coef(fit1)[2])
g+geom_abline(intercept=coef(fit1)[1], slope=coef(fit1)[2])+geom_abline(intercept=coef(fit1)[1]+coef(fit1)[3], slope=coef(fit1)[2])
g<-ggplot(mtcars, aes(x=wt, y=mpg, colour=cylF))
g<-g+geom_point()
g+geom_abline(intercept=coef(fit1)[1], slope=coef(fit1)[2])+geom_abline(intercept=coef(fit1)[1]+coef(fit1)[3], slope=coef(fit1)[2])
coef(fit1)
coef(fit1)[3]
fit1a<-lm(mpg~cylF,data=mtcars)
coef(fit1a)
fit1b<-lm(mpg~cylF*wt,data=mtcars)
coef(fit1b)
summary(fit1b)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ I(wt * 1.0) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(y,x)
abline(lm(y~x))
lm(y~x)
-0.1067 + 0.1289*1.344
plot(x,y)
abline(lm(y~x))
fit5<-lm(y~x)
dffits(fit5)
dfbetas(fit5)
hatvalues(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6<-lm(y~x)
fit6
dfbetas(fit6)
summary(fit1)
summary(fit1b)
anova(fit1,fit1b)
swirl(
)
)
anova(fit1,fit1b)
rgp1()
rgp2()
head(swiss)
m
lm
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl <- lm(Fertility ~ ., swiss)
mdl2 <- lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture+Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
deviance(fit3)
d <- deviance(fit3)/43
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n/d
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
ravenData
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
qchisq(0.95, 1)
var(rpois(1000, 50))
Type nxt()
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(MASS)
?shuttle
glm(use~auto, data=shuttle)
head(shuttle)
str(shuttle)
glm(use~wind, data=shuttle)
glm(use~wind, data=shuttle, family="bernoulli")
glm(use~wind, data=shuttle, family = "binomial")
exp(-0.03181)
exp(0.03181)
glm(use~wind+magn, data=shuttle, family = "binomial")
exp(-3.201e-02)
data(InsectSprays)
head InsectSprays
head(InsectSprays)
glm(count~spray, data=InsectSprays, family="poisson")
1/0.05588
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
2.67415/0.05588
1/(2.67415/0.05588)
exp(0.05588)
exp(-0.05588)
data(mtcars)
cars
mtcars
str(mtcars)
?mtcars
fit1<-lm(mpg~., data=mtcars)
anova(fit1)
fit1<-lm(mpg~am, data=mtcars)
summary(fit1)
vif()
vif(fit1)
fitA<-lm(mpg~., data=mtcars)
vif(fitA)
mtcars$carb
fit1<-lm(mpg~am+displ, data=mtcars)
fit1<-lm(mpg~am+disp, data=mtcars)
fit2<-lm(mpg~am+disp, data=mtcars)
fit1<-lm(mpg~am, data=mtcars)
anova(fit1,fit2)
vif(fit2)
fit3<-lm(mpg~am+displ+wt, data=mtcars)
fit3<-lm(mpg~am+disp+wt, data=mtcars)
vif(fit3)
anova(fit2,fit3)
vif(fitA)
fit4<-lm(mpg~am+disp+wt+hp, data=mtcars)
anova(fit3,fit4)
fit4<-lm(mpg~am+disp+hp, data=mtcars)
anova(fit2,fit4)
fit3<-lm(mpg~am+disp+hp, data=mtcars)
anova(fit2,fit3)
vif(fitA)
fit4<-lm(mpg~am+disp+hp+wt, data=mtcars)
anova(fit3,fit4)
fit5<-lm(mpg~am+disp+hp+wt+drat, data=mtcars)
anova(fit4,fit5)
anova(fit4,fit5)
anova(fit4,fit5)$F
anova(fit4,fit5)$Pr
vif(fitA)
fit5<-lm(mpg~am+disp+hp+wt+qsec, data=mtcars)
anova(fit4,fit5)$Pr
fit5<-lm(mpg~am+disp+hp+wt+vs, data=mtcars)
fit5<-lm(mpg~am+disp+hp+wt+qsec, data=mtcars)
fit6<-lm(mpg~am+disp+hp+wt+qsec+vs, data=mtcars)
anova(fit5,fit6)$Pr
fit6<-lm(mpg~am+disp+hp+wt+qsec+gear, data=mtcars)
anova(fit5,fit6)$Pr
fit6<-lm(mpg~am+disp+hp+wt+qsec+carb, data=mtcars)
anova(fit5,fit6)$Pr
fit6<-lm(mpg~am+disp+hp+wt+qsec+drat, data=mtcars)
anova(fit5,fit6)$Pr
NonSign=c("drat", "vs", "gear", "carb")
sapply(NonSign, function(x) anova(fit5,lm(mpg~am+disp+hp+wt+qsec+x, data=mtcars))$Pr)
sapply(NonSign, function(x) anova(fit5,lm(paste(mpg, "~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)
paste(mpg, "~am+disp+hp+wt+qsec+",x)
x=c("drat", "vs", "gear", "carb")
paste(mpg, "~am+disp+hp+wt+qsec+",x)
x<-c("drat", "vs", "gear", "carb")
paste(mpg, "~am+disp+hp+wt+qsec+",x)
paste("mpg~am+disp+hp+wt+qsec+",x)
sapply(NonSign, function(x) anova(fit5,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)
boxplot(fit1)
boxplot(fit2)
sapply(NonSign, function(x) anova(fit5,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)[2]
sapply(NonSign, function(x) anova(fit5,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)[,2]
sapply(NonSign, function(x) anova(fit5,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)[2,]
(anova(fit1,fit2)$Pr)[2,]
(anova(fit1,fit2)$Pr)
(anova(fit1,fit2)$Pr)[1,2]
predict(fit2,mtcars$am)
predict(fit2)
plot(mtcars$mpg,mtcars$disp)
plot(mtcars$disp,mtcars$mpg)
points(mtcars[am=0,]$disp, mtcars[am=0,]$mpg, pch = 21, col = "black", bg = "red", cex = 2)
points(mtcars[am==0,]$disp, mtcars[am==0,]$mpg, pch = 21, col = "black", bg = "red", cex = 2)
points(mtcars[mtcars$am==0,]$disp, mtcars[mtcars$am==0,]$mpg, pch = 21, col = "black", bg = "red", cex = 2)
points(mtcars[mtcars$am==1,]$disp, mtcars[mtcars$am==1,]$mpg, pch = 21, col = "black", bg = "blue", cex = 2)
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3, color="red")
abline(coef(fit2)[1] + coef(fit2)[3], coef(fit2)[2], lwd = 3, color="blue")
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3, col="red")
abline(coef(fit2)[1] + coef(fit2)[3], coef(fit2)[2], lwd = 3, col="blue")
coef(fit2)[1]
coef(fit2)[1]
coef(fit2)[3]
coef(fit2)[2]
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3, col="red")
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3)
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3)
abline(coef(fit2)[1], coef(fit2)[2])
abline(intercept=coef(fit2)[1], slope=coef(fit2)[2])
abline(30, -6)
abline(30, 6)
abline(0, 6)
abline(coef(fit2)[1], coef(fit2)[2], lwd = 3, col="red")
abline(coef(fit2)[1] + coef(fit2)[3], coef(fit2)[2], lwd = 3, col="blue")
plot(mtcars$disp,mtcars$mpg)
abline(30, 6)
abline(30, 0)
abline(30, 3)
abline(30, 0.4)
abline(intercept=30, slope=0.4)
lines(intercept=30, slope=0.4)
abline(25, 0.4)
abline(fit2)
points(mtcars[mtcars$am==1,]$disp, predict(fit2), pch = 21, col = "black", bg = "green", cex = 2)
xyplot(mpg~disp, data=mtcars2, pch=21, type=c("g","r"), groups=am)
library(lattice)
xyplot(mpg~disp, data=mtcars2, pch=21, type=c("g","r"), groups=am)
xyplot(mpg~disp, data=mtcars, pch=21, type=c("g","r"), groups=am)
library(ggplot2)
g<-ggplot(mtcars, aes(disp, mpg, share=am, colour=am, fill=am))+geom_smooth(method="lm")
g
mtcars$am
g<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g
str(mtcars)
mtcars$am<-as.character.factor(mtcars$am)
mtcars$am<-as.factor(as.character(mtcars$am))
str(mtcars)
mtcars$am
g<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g
levels(mtcars$am)[levels(mtcars$am)=="0"] <- "Automatic"
levels(mtcars$am)[levels(mtcars$am)=="1"] <- "Manual"
mtcars$am
g<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
mtcars$am
g
g2<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g3<-ggplot(mtcars, aes(hp, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g4<-ggplot(mtcars, aes(wt, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g5<-ggplot(mtcars, aes(qsec, mpg, shape=am, colour=am, fill=am))+geom_smooth(method="lm")
g3
g4
g5
g<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))
g+geom_boxplot
g+geom_boxplot()
g2<-ggplot(mtcars, aes(disp, mpg, shape=am, colour=am, fill=am))
g5<-ggplot(mtcars, aes(qsec, mpg, shape=am, colour=am, fill=am))
g4<-ggplot(mtcars, aes(wt, mpg, shape=am, colour=am, fill=am))
g3<-ggplot(mtcars, aes(hp, mpg, shape=am, colour=am, fill=am))
g2+geom_boxplot()
g3+geom_boxplot()
g4+geom_boxplot()
g5+geom_boxplot()
g4+geom_boxplot()
g+geom_boxplot()
g+geom_boxplot()
g2+geom_smooth(method="lm")
g3+geom_smooth(method="lm")
g4+geom_smooth(method="lm")
g5+geom_smooth(method="lm")
g6+geom_smooth(method="lm")
library(ggpubr)
ggally()
ggarrange()
ggarrange(g+geom_boxplot(), g2+geom_smooth(method="lm"), g3+geom_smooth(method="lm"), g4+geom_smooth(method="lm"), g5+geom_smooth(method="lm"),ncol3,nrow2)
ggarrange(g+geom_boxplot(), g2+geom_smooth(method="lm"), g3+geom_smooth(method="lm"), g4+geom_smooth(method="lm"), g5+geom_smooth(method="lm"),ncol=3,nrow=2)
ggarrange(g2+geom_smooth(method="lm"), g3+geom_smooth(method="lm"), g4+geom_smooth(method="lm"), g5+geom_smooth(method="lm"),ncol=3,nrow=2)
ggarrange(g2+geom_smooth(method="lm"), g3+geom_smooth(method="lm"), g4+geom_smooth(method="lm"), g5+geom_smooth(method="lm"),ncol=2,nrow=2)
fit1<-lm(mpg~am, data=mtcars)
summary(fit5)
fit4a<-lm(mpg~am+hp+wt+qsec, data=mtcars)
anova(fit4a, fit5)
str(mtcars)
fit1<-lm(mpg~am, data=mtcars)
fit2<-lm(mpg~am+hp, data=mtcars)
anova(fit1, fit2)
fit3<-lm(mpg~am+hp+wt, data=mtcars)
anova(fit2, fit3)
fit4<-lm(mpg~am+hp+wt+qsec, data=mtcars)
anova(fit3, fit4)
NonSign=c("qsec", "drat", "vs", "gear", "carb", "disp")
sapply(NonSign, function(x) anova(fit5,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)[2,]
NonSign=c("qsec", "drat", "vs", "gear", "carb", "disp")
sapply(NonSign, function(x) anova(fit3,lm(paste("mpg~am+disp+hp+wt+qsec+",x), data=mtcars))$Pr)[2,]
anova(fit3, fit4)
NonSign=c("qsec", "drat", "vs", "gear", "carb", "disp")
sapply(NonSign, function(x) anova(fit3,lm(paste("mpg~am+hp+wt+",x), data=mtcars))$Pr)[2,]
NonSign=c("cyl", "disp", "drat", "qsec", "vs", "gear", "carb")
sapply(NonSign, function(x) anova(fit3,lm(paste("mpg~am+hp+wt+",x), data=mtcars))$Pr)[2,]
plot(fit3$residuals)
plot(mtcars$mpg,fit3$residuals)
plot(mtcars$cyl,fit3$residuals)
plot(mtcars$disp,fit3$residuals)
plot(mtcars$drat,fit3$residuals)
plot(mtcars$qsec,fit3$residuals)
plot(mtcars$vs,fit3$residuals)
plot(mtcars$gear,fit3$residuals)
plot(mtcars$carb,fit3$residuals)
plot(mtcars$mpg,fit3$residuals)
mtcars$Resid3<-fit3$residuals
sapply(NonSignificant, function(x) paste("ggR", x)<<-ggplot(mtcars, aes(x,fit3$residuals)+geom_point()
)
)
NonSignificant=c("cyl", "disp", "drat", "qsec", "vs", "gear", "carb")
sapply(NonSignificant, function(x) paste("ggR", x)<<-ggplot(mtcars, aes(x,fit3$residuals))+geom_point())
sapply(NonSignificant, function(x) ggplot(mtcars, aes(x,fit3$residuals))+geom_point())
ggplot(mtcars, aes(cyl,fit3$residuals))+geom_point())
ggplot(mtcars, aes(cyl,fit3$residuals))+geom_point()
ggplot(mtcars, aes("cyl",fit3$residuals))+geom_point()
ggplot(mtcars, aes(cyl,fit3$residuals))+geom_point()
mtcarsLong<-gather(mtcars, key="NSvar", value="value", NonSignificant)
library(data.table)
mtcarsLong<-gather(mtcars, key="NSvar", value="value", NonSignificant)
library(tidyr)
mtcarsLong<-gather(mtcars, key="NSvar", value="value", NonSignificant)
mtcarsLong
summary(fit3)
coef(summary(fit3))
plot(fit3)
plot(fit3, which="all")
34.00287512+2.08371013
t.test(mpg~am, paired=FALSE, var.equal=FALSE, data=mtcars)
t.test(mpg~am+hp+wt, paired=FALSE, var.equal=FALSE, data=mtcars)
summary(fit1)
ls()
ls()
setwd("~/Rt/Course8_ML/CourseProj/Submission")
library(caret)
set.seed(123)
if (!file.exists("pml-training.csv"))
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", "pml-training.csv")
if (!file.exists("pml-testing.csv"))
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", "pml-testing.csv")
trSet<-read.csv("pml-training.csv")
cases<-read.csv("pml-testing.csv")
trSet<-trSet[,!(names(trSet)%in% c("user_name","cvtd_timestamp","new_window"))]
cases<-cases[,!(names(cases)%in% c("user_name","cvtd_timestamp","new_window"))]
classeBak<-trSet$classe
trSet<-data.frame(lapply(trSet, function(x) as.numeric(as.character(x))))
trSet$classe<-classeBak
cases<-data.frame(lapply(cases, function(x) as.numeric(as.character(x))))
trSetClean<-trSet[,sapply(trSet,function(col){sum(is.na(col))<0.97*length(col)})]
sum(complete.cases(trSetClean)); dim(trSetClean)
casesClean<-cases[,sapply(trSet,function(col){sum(is.na(col))<0.97*length(col)})]
dim(casesClean)
inValidat<-createDataPartition(y=trSetClean$classe, p=0.3, list=FALSE)
validation<-trSetClean[inValidat,]; Build<-trSetClean[-inValidat,]
inTrain<-createDataPartition(y=Build$classe, p=0.7, list=FALSE)
training<-Build[inTrain,]; testing<-Build[-inTrain,]
inTrain<-createDataPartition(y=Build$classe, p=0.7, list=FALSE)
training2<-Build[inTrain,]; testing2<-Build[-inTrain,]
inTrain<-createDataPartition(y=Build$classe, p=0.7, list=FALSE)
training3<-Build[inTrain,]; testing3<-Build[-inTrain,]
preProc<-preProcess(training[,-57], method="pca", thresh=0.7)
preProc$numComp
trainPC<-cbind(predict(preProc, training[,-57]), classe=training[,57]); testPC<-predict(preProc, testing[,-57])
preProc2<-preProcess(training2[,-57], method="pca", thresh=0.7)
preProc2$numComp
trainPC2<-cbind(predict(preProc2, training2[,-57]), classe=training[,57]); testPC<-predict(preProc2, testing2[,-57])
preProc3<-preProcess(training3[,-57], method="pca", thresh=0.7)
preProc3$numComp
trainPC3<-cbind(predict(preProc3, training3[,-57]), classe=training[,57]); testPC<-predict(preProc3, testing3[,-57])
validationPC<-predict(preProc, validation[,-57])
casesPC<-predict(preProc, casesClean[,-57])
mod1a<-train(classe~., method="rf", data=trainPC)
mod2a<-train(classe~., method="gbm", data=trainPC, verbose=FALSE)
mod1b<-train(classe~., method="rf", data=trainPC)
mod2b<-train(classe~., method="gbm", data=trainPC, verbose=FALSE)
mod1c<-train(classe~., method="rf", data=trainPC)
mod2c<-train(classe~., method="gbm", data=trainPC, verbose=FALSE)
testPC3<-predict(preProc3, testing3[,-57])
testPC2<-predict(preProc2, testing2[,-57])
testPC<-predict(preProc, testing[,-57])
errA<-confusionMatrix(testPC, predict(mod1, testPC))$overall[1,1]
errB<-confusionMatrix(testPC2, predict(mod1, testPC2))$overall[1,1]
errC<-confusionMatrix(testPC3, predict(mod1, testPC3))$overall[1,1]
errA<-confusionMatrix(testPC, predict(mod1a, testPC))$overall[1,1]
errB<-confusionMatrix(testPC2, predict(mod1b, testPC2))$overall[1,1]
errC<-confusionMatrix(testPC3, predict(mod1c, testPC3))$overall[1,1]
errA<-confusionMatrix(testing$classe, predict(mod1a, testPC))$overall[1,1]
errB<-confusionMatrix(testing2$classe, predict(mod1b, testPC2))$overall[1,1]
errC<-confusionMatrix(testing3$classe, predict(mod1c, testPC3))$overall[1,1]
1.0-mean(c(errA, errB, errC))
errA<-confusionMatrix(testing$classe, predict(mod2a, testPC))$overall[1,1]
errB<-confusionMatrix(testing2$classe, predict(mod2b, testPC2))$overall[1,1]
errC<-confusionMatrix(testing3$classe, predict(mod2c, testPC3))$overall[1,1]
1.0-mean(c(errA, errB, errC))
confusionMatrix(testing$classe, predict(mod1a, testPC))$overall
confusionMatrix(testing$classe, predict(mod1a, testPC))$overall[1,]
confusionMatrix(testing$classe, predict(mod1a, testPC))$overall[1]
errA<-confusionMatrix(testing$classe, predict(mod1a, testPC))$overall[1]
errB<-confusionMatrix(testing2$classe, predict(mod1b, testPC2))$overall[1]
errC<-confusionMatrix(testing3$classe, predict(mod1c, testPC3))$overall[1]
1.0-mean(c(errA, errB, errC))
errA<-confusionMatrix(testing$classe, predict(mod2a, testPC))$overall[1]
errB<-confusionMatrix(testing2$classe, predict(mod2b, testPC2))$overall[1]
errC<-confusionMatrix(testing3$classe, predict(mod2c, testPC3))$overall[1]
1.0-mean(c(errA, errB, errC))
